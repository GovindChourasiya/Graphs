class Solution {
    public void dfs(int i, int j, char[][] board, boolean[][] visited){
        int m = board.length;
        int n = board[0].length;
        if(i < 0 || j < 0 || i >= m || j >= n || visited[i][j] || board[i][j] == '.'){
            return;
        }
        visited[i][j] = true;
        dfs(i+1,j,board,visited);
        dfs(i,j+1,board,visited);
    }
    public int countBattleships(char[][] board) {
        int m = board.length;
        int n = board[0].length;

        boolean visited[][] = new boolean[m][n];
        int countShips = 0;

        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(board[i][j] == 'X' && !visited[i][j]){
                    countShips++;
                    dfs(i,j,board,visited);
                }
            }
        }

        return countShips;
    }
}
